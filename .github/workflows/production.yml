# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Spring Boot Test, Package, Deploy to AWS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Write DB Connection
        env:
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          import os
          with open('./src/main/resources/application-prod.properties', 'r') as file:
            filedata = file.read()
          filedata = filedata.replace('DB_CONNECTION', os.getenv('DB_CONNECTION'))
          filedata = filedata.replace('DB_USERNAME', os.getenv('DB_USERNAME'))
          filedata = filedata.replace('DB_PASSWORD', os.getenv('DB_PASSWORD'))
          with open('./src/main/resources/application-prod.properties', 'w') as file:
            file.write(filedata)
        shell: python
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests -Dspring.config.location=./src/main/resources/application-prod.properties -P prod
        env:
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      - name: Upload RestoHub JAR
        uses: actions/upload-artifact@v3
        with:
          name: artifact
          path: ./target/Restohub-0.0.1-SNAPSHOT.jar
  deploy:
    needs: build
    name: Deploy to AWS EBS
    runs-on: ubuntu-latest
    steps:
      - name: Download RestoHub JAR
        uses: actions/download-artifact@v2.1.1
        with:
          name: artifact
      - name: Deploy to ElasticBeanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.ACCESS_KEY }}
          aws_secret_key: ${{ secrets.ACCESS_KEY_SECRET }}
          application_name: restohub-api
          environment_name: Restohub-api-environment
          version_label: ${{ github.SHA }}
          region: us-east-2
          deployment_package: Restohub-0.0.1-SNAPSHOT.jar